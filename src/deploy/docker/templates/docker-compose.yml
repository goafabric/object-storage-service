version: "3.7"

services:
  object-storage-service:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    command: ["-Xmx${_Values_resources_requests_memory}"]

#    we cannot active the healthcheck because base native images does not have curl
#    healthcheck:
#      test: "curl -f http://localhost:${_Values_service_port}/actuator/health || exit 1"
#      interval: 10s
#      timeout: 10s
#      retries: 5
    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      - TZ=Europe/Berlin
      - server.port=${_Values_service_port}
      - tomcat.max-threads=20
      - security.authentication.enabled=false
      #forwarding sub url
      - server.forward-headers-strategy=FRAMEWORK
      #monitoring
      - management.endpoint.health.show-details=always
      - management.endpoints.web.exposure.include=health,prometheus,heapdump
      #zipkin / jaeger
      - spring.zipkin.service.name=object-storage-service
      - spring.zipkin.baseUrl=http://host.docker.internal:9411
      - spring.sleuth.enabled=true
      - spring.zipkin.enabled=true
      #persistence
      - spring.datasource.url=jdbc:postgresql://${_Values_root_name}-postgres:5432/objectstorage
      - spring.datasource.username=object-storage-service
      - spring.datasource.password=object-storage-service
      - database.provisioning.goals=-import-demo-data
      #adapter
      - adapter.calleeservice.url=http://host.docker.internal:50900
      - adapter.calleeservice.user=YWRtaW4=
      - adapter.calleeservice.password=YWRtaW4=
      - adapter.timeout=10000
      #log levels
      - logging.level.root=WARN
      - logging.level.org.springframework=INFO
      - logging.level.org.goafabric=DEBUG
      - logging.level.org.flywaydb.core="INFO"
      - logging.level.org.hibernate.SQL="INFO"
      - logging.level.org.goafabric.personservice.persistence.audit="INFO"
      #log file settings
      - logging.file.max-size=10MB
      - logging.file.name=/usr/share/logs/application.log

    depends_on:
      - postgres

  postgres:
    container_name: ${_Values_root_name}-postgres
    image: postgres:14.4
    restart: 'no'
    ports:
      - 50510:5432
    environment:
      - TZ=Europe/Berlin
      - POSTGRES_USER=object-storage-service
      - POSTGRES_PASSWORD=object-storage-service
      - POSTGRES_DB=objectstorage
    command: postgres -c 'shared_buffers=128MB' -c 'max_connections=30' -c 'shared_preload_libraries=pg_stat_statements'
    volumes:
      - pgdata:/var/lib/postgresql/data
#      - ../config/postgres/initdb/00_pg_statements.sql:/docker-entrypoint-initdb.d/00_pg_statements.sql
    networks:
      - ${_Values_root_name}-net

volumes:
    tmp:
    applogs:
    pgdata:

networks:
  object-storage-service-net:
    driver: bridge